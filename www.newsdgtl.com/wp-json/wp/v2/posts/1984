{"id":1984,"date":"2022-04-16T20:59:54","date_gmt":"2022-04-16T17:59:54","guid":{"rendered":"https:\/\/www.newsdgtl.com\/?p=1984"},"modified":"2022-04-16T20:59:54","modified_gmt":"2022-04-16T17:59:54","slug":"the-security-risks-of-thorchain-rune","status":"publish","type":"post","link":"https:\/\/www.newsdgtl.com\/the-security-risks-of-thorchain-rune\/","title":{"rendered":"The Security Risks of THORChain (RUNE)"},"content":{"rendered":"<p> <br \/>\n<\/p>\n<div>\n<p>According to THORChain\u2019s treasury report for Q1 2022 released on April 1, the chain registered a growth in revenue despite the twofold impact of persistent market sluggishness and highly unstable geopolitical factors. Public data shows that THORChain recorded $2.17 billion in revenue in Q1 2022. THORChain, acclaimed as the \u201ccross-chain version of UniSwap\u201d, gained a foothold in the cross-chain trading market relying on its unique advantages and earned extensive recognition among investors.<\/p>\n<p>Behind all these glamours, THORChain is also deeply troubled by hacking. The chain suffered frequent security breaches since it was launched on Ethereum, a fact that casts doubt on its security. On April 11, THORChain tweeted about phishing attacks, warning users not to interact with [DeTHOR] or other unknown tokens within their wallets, which once again raised concerns about its security issues.<\/p>\n<p><img loading=\"lazy\" class=\"size-full wp-image-488247 aligncenter\" src=\"https:\/\/www.newsdgtl.com\/wp-content\/uploads\/2022\/04\/Picture127.png\" alt=\"\" width=\"830\" height=\"503\"  \/><\/p>\n<p>While building a sound security system for CoinEx products, the CoinEx security team also keeps track of security incidents in the blockchain space to help users better understand the security of different projects from the perspective of technical security and mitigate the investment risk. Aiming to improve the security criteria for the blockchain sector, the CoinEx security team has analyzed the security risks of THORChain (RUNE). The team hopes that THORChain could note and mitigate the following risks by optimizing the relevant smart contract codes. In addition, this article is also a warning for users, reminding them to be more aware of asset security and avoid asset losses.<\/p>\n<h3>How secure is THORChain (RUNE)?<\/h3>\n<p>Through analysis of the contract code and logic of THORChain (RUNE), the CoinEx security team has found the following risks:<\/p>\n<p>To begin with, let\u2019s check out the contract code of THORChain (RUNE):<\/p>\n<p><a rel=\"nofollow noopener\" target=\"_blank\" href=\"https:\/\/etherscan.io\/address\/0x3155ba85d5f96b2d030a4966af206230e46849cb#code\">https:\/\/etherscan.io\/address\/0x3155ba85d5f96b2d030a4966af206230e46849cb#code<\/a><\/p>\n<p>We can tell that RUNE is a pretty standard ERC-20 token. It should be noted that apart from the ERC-20 interface, THORChain (RUNE) offers an additional interface:<\/p>\n<p><img loading=\"lazy\" class=\"size-full wp-image-488248 aligncenter\" src=\"https:\/\/www.newsdgtl.com\/wp-content\/uploads\/2022\/04\/Picture128.png\" alt=\"\" width=\"545\" height=\"66\"  \/><\/p>\n<p>According to transferTo (as shown in the picture above), THORChain (RUNE) uses tx.origin, which is one of the causes behind its security risks. Here, we should explain the difference between tx.origin and msg.sender:<\/p>\n<p>The below picture describes what happens when a regular address calls the smart contract:<\/p>\n<p><img loading=\"lazy\" class=\"size-full wp-image-488249 aligncenter\" src=\"https:\/\/www.newsdgtl.com\/wp-content\/uploads\/2022\/04\/Picture129.png\" alt=\"\" width=\"830\" height=\"294\"  \/><\/p>\n<p>In such cases, msg.sender = account.address, and tx.origin = account.address, which means that msg.sender is just the same as tx.origin.<\/p>\n<p>The following is what happens when an account calls contract A, and contract A calls contract B:<\/p>\n<p><img loading=\"lazy\" class=\"size-full wp-image-488250 aligncenter\" src=\"https:\/\/www.newsdgtl.com\/wp-content\/uploads\/2022\/04\/Picture130.png\" alt=\"\" width=\"830\" height=\"245\"  \/><\/p>\n<p>When contract A calls contract B (as shown above), we can tell that msg.sender equals tx.origin in contract A.<\/p>\n<p>However, in contract B, msg.sender = contractA.address, while tx.origin = account.address. Therefore, tx.origin is like a global variable that traverses the entire call stack and returns the address of the account that originally sent the transaction. This is the key issue: to date, almost all known attacks against THORChain (RUNE) relate to tx.origin.<\/p>\n<p>Let\u2019s now find out how attackers steal users\u2019 RUNE tokens through tx.origin:<\/p>\n<h3>Attack No.1: Pilfer a Goat from a Herd<\/h3>\n<p>Addresses on Ethereum are divided into external addresses and contract addresses. Transferring ETH to these two types of addresses through external addresses is fundamentally different. The <a rel=\"nofollow noopener\" target=\"_blank\" href=\"https:\/\/docs.soliditylang.org\/en\/v0.8.12\/contracts.html#receive-ether-function\">Official Documentation<\/a> of solidity states that a contract address must implement a receive Ether function before making transfers.<\/p>\n<p>In light of the features of tx.origin, hackers may build an Attack contract:<\/p>\n<p><img loading=\"lazy\" class=\"size-full wp-image-488251 aligncenter\" src=\"https:\/\/www.newsdgtl.com\/wp-content\/uploads\/2022\/04\/Picture131.png\" alt=\"\" width=\"1267\" height=\"617\"  \/><\/p>\n<p>When the Attack contract receives an ETH transfer from a user, it will \u201cpilfer a goat from a herd\u201d \u2014 the contract will steal the user\u2019s RUNE tokens in the process.<\/p>\n<h3>Attack No.2: Internal Attack<\/h3>\n<p>An Internal Attack is a special type of attack. When trying to steal a user\u2019s RUNE through an Internal Attack, the hacker needs to have a medium token. Moreover, the token must also call third-party contracts. According to the transfer records of RUNE on Ethereum, some attackers hacked RUNE through AMP Token transfers.<\/p>\n<p>AMP Token uses the ERC-1820 standard to manage Hook registration and examine whether Hook is registered upon each transfer. If Hook has been registered, then the Hook will be called.<\/p>\n<p>The contract code of AMP Token shows that the final implementation of the transfer is: _transferByPartition. Meanwhile, there are two calls involving transferHook: _callPreTransferHooks (before the transfer) and _callPostTransferHooks (after the transfer). In particular, _callPreTransferHooks is for the from address, while _callPostTransferHooks is for the to address (i.e. the receiving address).<\/p>\n<p>For regular users, stealing tokens from themselves is pointless. Therefore, attackers may exploit _callPostTransferHooks. Let\u2019s now check out the codes of _callPostTransferHooks.<\/p>\n<p><img loading=\"lazy\" class=\"size-full wp-image-488252 aligncenter\" src=\"https:\/\/www.newsdgtl.com\/wp-content\/uploads\/2022\/04\/Picture132.png\" alt=\"\" width=\"830\" height=\"913\"  \/><\/p>\n<p>IAmpTokensRecipient(recipientImplementation).tokensReceived()<\/p>\n<p>We can tell that the only callback that attackers could exploit is IAmpTokensRecipient(recipientImplementation).tokensReceived()<\/p>\n<p>Next, we will illustrate how this call can be used to transfer a user\u2019s RUNE while making an AMP Token transfer.<\/p>\n<p><strong>Step 1: <\/strong>A call contract is needed (as shown below):<\/p>\n<p><img loading=\"lazy\" class=\"size-full wp-image-488253 aligncenter\" src=\"https:\/\/www.newsdgtl.com\/wp-content\/uploads\/2022\/04\/Picture133.png\" alt=\"\" width=\"1269\" height=\"775\"  \/><\/p>\n<p><strong>Step 2: <\/strong>Deploy the contract to obtain the Attack Address.<\/p>\n<p><strong>Step 3: <\/strong>Call the ERC-1820 contract interface (setInterfaceImplementer) to register the interface.<\/p>\n<p><strong>ERC-1820 Address: <\/strong>0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24<\/p>\n<p><strong>Contract interface:<\/strong> setInterfaceImplementer(address toAddr, bytes32 interfaceHash, address implementer)<\/p>\n<p>In particular, toAddr is the receiving address of the AMP transfer,<\/p>\n<p>interfaceHash\u4e3aAmpTokensRecipient\u7684hash:<\/p>\n<p>0xfa352d6368bbc643bcf9d528ffaba5dd3e826137bc42f935045c6c227bd4c72a<\/p>\n<p>interfaceHash is the hash of AmpTokensRecipient:<\/p>\n<p>0xfa352d6368bbc643bcf9d528ffaba5dd3e826137bc42f935045c6c227bd4c72a<\/p>\n<p>Implementer is the Attack Address obtained in Step 2.<\/p>\n<p><strong>Step 4: <\/strong>Lure a user to transfer AMP to the toAddr to trigger a callback, and steal his RUNE at the same time.<\/p>\n<h3>Attack No.3: Phishing Attack<\/h3>\n<p>As its name suggests, in a phishing attack, the attacker promises to give away incredible benefits to lure users into performing certain contract operations. Here, we will introduce a common phishing attack.<\/p>\n<p><strong>Step 1:<\/strong> The attacker issues an ERC-20 token, and may write it into any contract interface that involves signatures.<\/p>\n<p><strong> <img loading=\"lazy\" class=\"size-full wp-image-488254 aligncenter\" src=\"https:\/\/www.newsdgtl.com\/wp-content\/uploads\/2022\/04\/Picture134-1.png\" alt=\"\" width=\"830\" height=\"166\"  \/><\/strong><\/p>\n<p><strong>Step 2:<\/strong> Create a trading pair on Uniswap or any other swap;<\/p>\n<p><strong>Step 3:<\/strong> Offer airdrops to all users\/addresses who hold RUNE tokens;<\/p>\n<p>The initial work of the phishing attack is basically completed through the above these steps. Next, the attacker only has to wait for users to trade on a swap, and users risk losing their RUNE once they perform operations such as approve, transfer, etc.<\/p>\n<p>In addition, in order to further verify the security risk of THORChain contract code, CoinEx has discussed with the security team from SlowMist and PeckShield, two well-known security agencies in the industry. Confirmed by SlowMist and PeckShield, the security risk mentioned above does exist.<\/p>\n<p>So far, we have covered several types of attacks, as well as the security risks that users are exposed to.<\/p>\n<p>How should the project team optimize the contract code to make itself more secure and protect users\u2019 assets?<\/p>\n<p>The only answer is to be cautious about using tx.origin.<\/p>\n<p>How can regular users mitigate risks and protect their assets in the face of attacks that seem unavoidable? The CoinEx security team offers the following suggestions:<\/p>\n<ol>\n<li>For Attack No.1: When making a transfer, keep track of the estimated Gas consumption. For a regular ETH transfer, a Gas fee of 21,000 is more than enough. Be careful if the Gas consumption far exceeds that figure.<\/li>\n<li>For Attack No.2: Isolate your tokens by adopting different wallets. You can store different tokens in different addresses. Extra caution is needed when it comes to the hot wallet address offered by exchanges.<\/li>\n<li>For Attack No.3: Greed is the source of all evil. Do not blindly participate in any airdrop event.<\/li>\n<\/ol>\n<p>Security has always been a top concern in the blockchain sector. All players, including project teams and exchanges, should prioritize security during project operation, keep users\u2019 assets safe and secure, and jointly promote the sound growth of the blockchain industry.<\/p>\n<\/div>\n<p><br \/>\n<br \/><a href=\"https:\/\/www.newsbtc.com\/news\/company\/coinex-security-team-the-security-risks-of-thorchain-rune\/\">Source link <\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>According to THORChain\u2019s treasury report for Q1 2022 released on April 1, the chain registered a growth in revenue despite the twofold impact of persistent market sluggishness and highly unstable geopolitical factors. Public data shows that THORChain recorded $2.17 billion in revenue in Q1 2022. THORChain, acclaimed as the \u201ccross-chain version of UniSwap\u201d, gained a [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":1985,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[30],"tags":[41,45,37,44,43,42,40,39],"_links":{"self":[{"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/posts\/1984"}],"collection":[{"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/comments?post=1984"}],"version-history":[{"count":1,"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/posts\/1984\/revisions"}],"predecessor-version":[{"id":1986,"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/posts\/1984\/revisions\/1986"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/media\/1985"}],"wp:attachment":[{"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/media?parent=1984"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/categories?post=1984"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.newsdgtl.com\/wp-json\/wp\/v2\/tags?post=1984"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}